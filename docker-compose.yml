services:
  backend:
    build:
      context: ./srcs/backend
    container_name: django
    command: python manage.py runserver 0.0.0.0:8000
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
    volumes:
      - backend_vol:/backend
      - /backend/static
    depends_on:
      - postgresql
    networks:
      - trans_network
    restart: always

  nginx:
    build:
      context: ./srcs/nginx
    container_name: nginx
    ports:
      - "80:80"
    depends_on:
      - backend
    volumes:
      - ./srcs/nginx:/etc/nginx/conf.d
      - ./srcs/backend/static:/usr/share/nginx/html/static
      - ./srcs/frontend:/usr/share/nginx/html
      - ./srcs/frontend/static:/usr/share/nginx/html/static
    networks:
      - trans_network
    restart: always

  postgresql:
    image: postgres:17.0
    container_name: postgres
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - trans_network
    restart: always

volumes:
  backend_vol:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./srcs/backend/
  pgdata:
    driver: local

networks:
  trans_network:
    driver: bridge
